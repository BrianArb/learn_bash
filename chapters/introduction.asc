About Bash
----------

((Bash)) is the GNU Project's shell. Bash is the Bourne Again Shell. 
Bash is an sh-compatible shell that incorporates useful features from the Korn
shell (ksh) and C shell (csh). It is intended to conform to the IEEE POSIX 
P1003.2/ISO 9945.2 Shell and Tools standard. It offers functional improvements 
over sh for both programming and interactive use. In addition, most sh scripts 
can be run by Bash without modification.

Requisites
~~~~~~~~~~

GNU bash is installed. You have a familiarity with some basic programming 
concepts. You have some familiarity with the command line environment and
basic command lines utilities.

Check your version of Bash if it's installed.

*Type this command in your terminal window.*
[source,bash]
--------------------------------------
bash --version
--------------------------------------
[NOTE]
.Expect some text like this to go to stdout.
=====================================================================
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
=====================================================================


Hello Word
^^^^^^^^^^

Time to write our first bash shell script. The "Hello World!" program prints
out some text to standard out (stdout) and demonstrates the very
basics of the Bash language and it's syntax. The script is simple enough anyone
should be able to write it and to verify that we should be able to run bash
shell scripts in your environment.

*Create a file named `hello.sh` using a plain text editor.*
[source,bash]
--------------------------------------
#!/bin/bash
#
# My Hello World!

echo "Hello World!"
--------------------------------------

*Run our hello.sh file.*
[source,bash]
--------------------------------------
bash hello.sh
--------------------------------------
Prints +Hello World!+ to standard out.

While it may not appear much is going on here. We have done some really
important things.

The suffix +.sh+ although not required. A good suffix helps us in a glance
identify shell script from other files examples are +foo.txt+ and +index.html+

Every Shell Script starts with the +shebang+ line +#!/bin/bash+
Under Unix-like operating systems, when a script with a shebang is run as a
program, the program loader parses the rest of the script's initial line as 
an interpreter directive; the specified interpreter program is run instead, 
passing to it as an argument the path that was initially used when attempting 
to run the script. 

It is good practice to include a comment to describe the purpose of your
script file. In bash comments start with the character "+#+"

+# My Hello World!+

Tells anyone who may read the contents of this file, your goal in writing 
this file.

The script body is simple, use +echo+ to print the string +"Hello World!"+

+echo "Hello World!"+

In this example we told +bash+ to execute the file hello.sh
We can, with the right permissions execute the file by it's path and name. 

*Run the file by it relative path and name*
[source,bash]
--------------------------------------
./hello.sh
bash: ./hello.sh: Permission denied
--------------------------------------
*Check the permissions*
[source,bash]
--------------------------------------
ls -l hello.sh 
-rw-rw-r-- 1 brian brian 54 Sep 13 22:11 hello.sh
--------------------------------------
*Change the permissions*
[source,bash]
--------------------------------------
chmod -v +x hello.sh 
mode of ‘hello.sh’ changed from 0664 (rw-rw-r--) to 0775 (rwxrwxr-x)
--------------------------------------
*Run the file by it relative path and name*
[source,bash]
--------------------------------------
./hello.sh 
Hello World!
--------------------------------------
*Success!*

By typing +./+ in front of our command we essentially told our shell that the
script file +hello.sh+ is in our current work directory.
You could of easily type out the full path to the file +/home/brian/hello.sh+

You may also want to move this file to where your system can find it in 
it's +PATH+
[source,bash]
--------------------------------------
echo $PATH
/home/brian/bin:/usr/local/bin:/usr/bin:/bin
--------------------------------------
[NOTE]
.PATH environment variable.
=====================================================================
The PATH environment variable is a colon-delimited list of directories that 
your shell searches through when you enter a command.

Program files (executables) are kept in many different places on the Unix 
system. Your path tells the Unix shell where to look on the system when you 
request a particular program. 
=====================================================================

+/home/brian/bin+ would be a good choice for me.
[source,bash]
--------------------------------------
mv hello.sh /home/brian/bin/hello.sh
--------------------------------------
*Run the file by it's name*
[source,bash]
--------------------------------------
hello.sh
--------------------------------------
Now our +hello.sh+ script is found in our +PATH+
and we no longer need to type out the path the script file. It's found for us!
[source,bash]
--------------------------------------
which hello.sh
/home/brian/bin/hello.sh
--------------------------------------

*Conculsion*
If you made it this far and have resolved any difficulties that may of arisen.
then congratulations. You have done just about everything you need inorder to
start written shell scripts.

