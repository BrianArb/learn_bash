Bash and Bash scripts
---------------------

When you find your self repetitively type the same commands over and over again 
in your job. Or you have a sequence of tasks in the shell environment you know
you can automate away and the numerous about of typing and memorization of
commands and flags becomes daunting. You just might be ready to turn these tasks
into a shell script. Particularly if you want to assure the next person to run
these set of commands will do them in the exact same way.

But before we start there are some good things to consider. Is my good written
well, Does my code look complicated or confusing. Does it have bugs or do
unnecessary work? Is it self documenting? Can someone else easy contribute to
this script and follow our intended logic?

As you write and read more code you might get a profound appreciation for well
written scripts. This next chapter I hope will be a good start too.

Developing Good Scripts
~~~~~~~~~~~~~~~~~~~~~~~

Properties of good scripts
^^^^^^^^^^^^^^^^^^^^^^^^^^
Some general considerations before we continue:

- A script should run without errors.
- It should perform the task for which it is intended.
- Program logic is clearly defined and apparent.
- A script does not do unnecessary work.
- Scripts should be reusable.
- Be well documented.
- Easy to read.






